export const PICK_KEYS = {
  basic: ['username', 'password'],
  bearer: ['token'],
  jwt: [
    'payload',
    'header',
    'queryParamKey',
    'secret',
    'addTokenTo',
    'isSecretBase64Encoded',
    'algorithm',
    'headerPrefix',
  ],
  digest: [
    'username',
    'password',
    'realm',
    'nonce',
    'algorithm',
    'qop',
    'nonceCount',
    'clientNonce',
    'opaque',
    'disableRetryRequest',
  ],
  oauth1: [
    'addParamsToHeader',
    'signatureMethod',
    'consumerKey',
    'consumerSecret',
    'token',
    'privateKey',
    'tokenSecret',
    'callback',
    'verifier',
    'timestamp',
    'nonce',
    'version',
    'realm',
    'includeBodyHash',
    'addEmptyParamsToSign',
    'disableHeaderEncoding',
  ],
  oauth2: [
    'addTokenTo',
    'grant_type',
    'redirect_uri',
    'authUrl',
    'accessTokenUrl',
    'clientId',
    'clientSecret',
    'username',
    'password',
    'challengeAlgorithm',
    'code_verifier',
    'scope',
    'state',
    'client_authentication',
    'fllowAcceccTokenUrl',
    'refreshTokenUrl',
  ],
  hawk: [
    'authId',
    'authKey',
    'algorithm',
    'user',
    'nonce',
    'extraData',
    'app',
    'delegation',
    'timestamp',
    'includePayloadHash',
  ],
  awsv4: ['addAuthDataToQuery', 'accessKey', 'secretKey', 'region', 'service', 'sessionToken'],
  ntlm: ['disableRetryRequest', 'username', 'password', 'domain', 'workstation'],
  apikey: ['key', 'value', 'in'],
  edgegrid: [
    'accessToken',
    'clientToken',
    'clientSecret',
    'nonce',
    'timestamp',
    'baseURi',
    'headersToSign',
    'maxBodySize',
  ],
  asap: ['alg', 'iss', 'aud', 'kid', 'privateKey', 'sub', 'claims', 'exp'],
};
